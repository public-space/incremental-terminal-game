"""
Help Screen
===========

Tutorial and command reference for colony.sh.
"""

import sys
import os

# Add engine to path
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.dirname(__file__))))

from engine import UIFramework, Color


class HelpScreen:
    """
    Help and tutorial screen.

    Displays game instructions, commands, and mechanics.
    """

    def __init__(self, ui: UIFramework):
        """
        Initialize help screen.

        Args:
            ui: UI framework instance
        """
        self.ui = ui

    def render(self):
        """Render help screen."""
        self.ui.clear_screen()

        # Header
        self.ui.print_colored(
            "╔═══ COLONY.SH HELP ═════════════════════════════════════════════════════╗",
            Color.BRIGHT_CYAN
        )
        self.ui.print_colored(
            "║ Survival Manual - Read carefully. Your life depends on it.           ║",
            Color.CYAN
        )
        self.ui.print_colored(
            "╠════════════════════════════════════════════════════════════════════════╣",
            Color.BRIGHT_CYAN
        )

        # Objective
        self._render_section("OBJECTIVE", [
            "You command a frontier outpost on a dead world.",
            "Manage resources. Build structures. Research technology.",
            "Keep your colonists alive. Expand. Survive.",
            "",
            "Every Sol (day) brings new challenges.",
            "Energy is life. When it runs out, everything stops.",
        ])

        # Resources
        self._render_section("RESOURCES", [
            "⚡ ENERGY  - Powers all systems. Generated by Solar Arrays.",
            "⛏ METAL   - Construction material. Mined from dead rock.",
            "🧬 BIOMASS - Food for colonists. Recycled organic matter.",
            "👤 COLONISTS - Your workforce. Fragile. Precious.",
        ])

        # Commands
        self._render_section("COMMANDS", [
            "[B] Build     - Construct structures (costs resources)",
            "[R] Research  - Unlock technologies (permanent upgrades)",
            "[I] Info      - View detailed statistics",
            "[H] Help      - Show this screen",
            "[S] Save      - Save your progress",
            "[Q] Quit      - Exit the game",
        ])

        # Tips
        self._render_section("SURVIVAL TIPS", [
            "• Balance energy production and consumption",
            "• Build Mining Rigs early to generate metal",
            "• Research upgrades to boost efficiency",
            "• Watch your biomass - colonists need food",
            "• Save often. Catastrophes happen.",
        ])

        # Footer
        self.ui.print_colored(
            "╠════════════════════════════════════════════════════════════════════════╣",
            Color.BRIGHT_CYAN
        )
        self.ui.print_colored(
            "║ Press [ENTER] to return                                               ║",
            Color.CYAN
        )
        self.ui.print_colored(
            "╚════════════════════════════════════════════════════════════════════════╝",
            Color.BRIGHT_CYAN
        )

        input()

    def _render_section(self, title: str, lines: list):
        """
        Render a help section.

        Args:
            title: Section title
            lines: List of content lines
        """
        # Section header
        self.ui.print_colored(f"║ {title}", Color.BRIGHT_WHITE)
        self.ui.print_colored(
            "║ ────────────────────────────────────────────────────────────────── ║",
            Color.WHITE
        )

        # Content lines
        for line in lines:
            if line:
                self.ui.print_colored(f"║   {line:<66} ║", Color.WHITE)
            else:
                print("║" + " " * 70 + "║")

        print()


# Example usage
if __name__ == "__main__":
    ui = UIFramework(use_colors=True)
    help_screen = HelpScreen(ui)

    print("Rendering help screen...\n")
    help_screen.render()

    print("\n✓ Help screen test complete!")
